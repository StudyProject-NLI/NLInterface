var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Overview","text":"<p>Welcome to the documentation of NLInterface Project!</p>"},{"location":"index.html#are-you-a-tester","title":"Are you a tester?","text":"<p>Checkout the installation guide to get the current version running on your Android device.</p>"},{"location":"index.html#are-you-a-developer","title":"Are you a developer?","text":"<p>Use our Android Studio Setup Guide and architecture to contribute new features and fix bugs.</p>"},{"location":"index.html#are-you-our-supervising-professor","title":"Are you our supervising professor?","text":"<p>We are not done yet, please look somewhere else.</p> <p></p>"},{"location":"architecture/overview.html","title":"How is our app structured?","text":"<pre><code>flowchart\n    subgraph activities\n    m[MainActivity]\n    m --&gt; GroceryListActivity\n    m --&gt; PlaceDetailsActivity\n    m --&gt; SettingsActivity\n    m --&gt; ClassificationActivity\n\n    click m \"activities/MainActivity.html\"\n    click GroceryListActivity \"activities/GroceryListActivity.html\"\n    click PlaceDetailsActivity \"activities/PlaceDetailsActivity.html\"\n    click SettingsActivity \"activities/SettingsActivity.html\"\n    click ClassificationActivity \"activities/ClassificationActivity.html\"\n\n\n    end\n    subgraph utilities\n    TextToSpeechUtility\n    SpeechToTextButton\n    SpeechToTextUtility\n\n    end</code></pre>"},{"location":"architecture/activities/ClassificationActivity.html","title":"ClassificationActivity","text":""},{"location":"architecture/activities/ClassificationActivity.html#features","title":"Features","text":"<ul> <li>CAMERA PREVIEW: Shows a preview of the back camera of your smartphone</li> <li>OBJECT DETECTION: Performs automatic object detection using MobileNetV1 and displays the objects category, confidence rating and bounding box</li> </ul>"},{"location":"architecture/activities/GroceryListActivity.html","title":"GroceryListActivity","text":""},{"location":"architecture/activities/GroceryListActivity.html#features","title":"Features","text":"<ul> <li>SCROLLABLE GROCERY LIST: A recycler view of cards, each holding the name of one grocery item on the grocery list. The card width dynamically adapts to the length of the item name. Greyed-out cards indicate that an item is in the cart.</li> <li>ADD ITEM BUTTON: A bright red button entitled \u2018Add Item\u2019 is displayed at the bottom of the screen. If clicked, a dialog opens.</li> <li>ADD ITEM DIALOG: Opens when the add item button is clicked. The dialog consists of a descriptive header entitled \u2018Add a New Grocery Item,\u2019 an editable text field with the hint \u2018Item Name,\u2019 a positive button \u2018Add,\u2019 and a negative button \u2018Cancel.\u2019 When the dialog is opened, the keyboard is also activated. Clicking the positive button adds a new item by the input name. The negative button cancels the action.</li> </ul>"},{"location":"architecture/activities/GroceryListActivity.html#actions","title":"Actions","text":"<ul> <li>ADDING ITEMS: Items can be added to the list by voice command or via the \u2018add item\u2019 button and corresponding dialog window. Per default, a new item is not in the cart.</li> <li>REMOVING ITEMS: Items can be removed from the list by swiping right, left, or by voice command.</li> <li>PLACING ITEMS IN / REMOVING ITEMS FROM THE CART: Long-clicking an item card changes the in-cart status of the item. If it is not in the cart, i.e., not greyed out, it is placed in the cart and greyed out. Else, it is taken out of the cart and colored. Alternatively, the in- cart status can also be changed by voice command.</li> <li>READING OUT AN ITEM NAME: Clicking an item card will read out the item name.</li> </ul>"},{"location":"architecture/activities/GroceryListActivity.html#voice-commands","title":"Voice Commands","text":"<ul> <li>\"GO TO [DESIRED ACTIVITY NAME]\": Navigates to the desired activity.</li> <li>\"ADD AN ITEM [ITEM NAME]\": Adds a new item.</li> <li>\"REMOVE AN ITEM [ITEM NAME]\": Removes the item from the list if it exists.</li> <li>\"ADD AN ITEM TO THE CART [ITEM NAME]\": Adds the item to the cart if it exists and is not already in the cart.</li> <li>\"REMOVE AN ITEM FROM THE CART [ITEM NAME]\": Removes the from the cart if it exists and is in the cart.</li> <li>\"CHECK IF AN ITEM IS ON THE LIST [ITEM NAME]\": States whether the item is on the list.</li> <li>\"LIST ALL GROCERY ITEMS\": Reads out the names of all grocery items.</li> <li>\"LIST ALL ITEMS IN THE CART\": Reads out the names of all grocery items in the cart.</li> <li>\"LIST ALL ITEMS NOT IN THE CART\": Reads out the name of all grocery items not in the cart.</li> <li>\"TELL ME MY OPTIONS\": Reads out all possible voice commands for this activity.</li> </ul>"},{"location":"architecture/activities/MainActivity.html","title":"MainActivity","text":""},{"location":"architecture/activities/MainActivity.html#features","title":"Features","text":"<ul> <li>NAVIGATION BUTTONS : The Main Activity / Main Screen features a button for each of the app's components. Clicking a button initiates a new activity. </li> </ul>"},{"location":"architecture/activities/MainActivity.html#voice-commands","title":"Voice Commands","text":"<ul> <li>\"GO TO [DESIRED ACTIVITIY NAME]\": Navigates to the desired activity.</li> </ul>"},{"location":"architecture/activities/PlaceDetailsActivity.html","title":"PlaceDetailsActivity","text":""},{"location":"architecture/activities/PlaceDetailsActivity.html#features","title":"Features","text":"<ul> <li>SCROLLABLE PLACE DETAILS LIST: A recycler view of place detail cards, each holding the name of a store and displaying that store\u2019s opening hours (for the current day).</li> <li>FAVORITE ICON: A star icon next to each place detail card indicates whether the place is a favorite. Filled-in icons are favorites; outlines are not.</li> <li>SEARCH BAR: A button layout provided by Google. Clicking it will open the place search dialog. It has been placed underneath the voice activation button, as its layout cannot be changed and is unsuitable for visually impaired and blind people. The voice activation button acts as a reference point.</li> <li>PLACE SEARCH DIALOG: A dialog provided by Google that searches the Google Places API for matches for a given input string. While typing, the dialog will attempt to autocomplete the input string by displaying a list of possible options.</li> </ul>"},{"location":"architecture/activities/PlaceDetailsActivity.html#actions","title":"Actions","text":"<ul> <li>ADDING NEW PLACES: Places can currently only be added by clicking the search bar button and then entering a search string in the editable text field of the place search dialog. This place will be added to the place details list by clicking on a suggested match.</li> <li>DELETING PLACES: Places can be removed from the list by swiping right, left, or by voice command.</li> <li>READING OUT AN ITEM NAME: Clicking a place detail card will read out the place name and today\u2019s opening hours.</li> <li>ADDING PLACES TO / REMOVING PLACES FROM FAVORITES: A place can be added to favorites either by voice command or by clicking the favorite icon outline of the place. Clicking a filled-in favorite icon will remove the corresponding place from favorites, which can also be performed by voice command.</li> </ul>"},{"location":"architecture/activities/PlaceDetailsActivity.html#voice-commands","title":"Voice Commands","text":"<ul> <li>\"GO TO [DESIRED ACTIVITY NAME]\": Navigates to the desired activity.</li> <li>\"REMOVE A PLACE [ITEM NAME]\": Removes the place if it exists.</li> <li>\"TELL ME THE OPENING HOURS OF A PLACE [ITEM NAME]\": Reads out today\u2019s opening hours of the place, if it exists.</li> <li>\"ADD A PLACE TO FAVORITES [ITEM NAME]\": Adds the place to favorites if it exists and is not already a favorite.</li> <li>\"REMOVE A PLACE FROM FAVORITES [ITEM NAME]\": Removes the place from favourites if it exists and is a favorite.</li> <li>\"LIST ALL SAVED PLACES\": Reads out the names of all places on the place detail list.</li> <li>\"LIST MY FAVORITE PLACES\": Reads out the names of all favorite places on the place detail list.</li> <li>\"LIST ALL OPEN PLACES\": Reads out the names of all currently open places on the place detail list.</li> <li>\"TELL ME MY OPTIONS\": Reads out all possible voice commands for this activity.</li> </ul>"},{"location":"architecture/activities/SettingsActivity.html","title":"SettingsActivity","text":""},{"location":"architecture/activities/SettingsActivity.html#features","title":"Features","text":"<ul> <li>SCREEN ON SETTINGS: Toggles between \u2018keep screen always on\u2019 and \u2018dim screen after a while\u2019. The button is always labeled with the currently active setting so as not to have too much visual input.</li> <li> <p>THEME SETTINGS: Toggles between \u2018light theme,\u2019 \u2018dark theme,\u2019 and \u2018default theme.\u2019 The default theme corresponds to the phone\u2019s system settings. The chosen theme is activated by navigating back to the Main Activity. The button is always labeled with the currently active setting so as not to have too much visual input.</p> </li> <li> <p>BARCODE SERVICE SETTINGS: Toggles the Barcode Scanning Service \"on\" or \"off\". Changes will take effect when you change back into the Main Activity.</p> </li> </ul>"},{"location":"architecture/activities/SettingsActivity.html#voice-commands","title":"Voice Commands","text":"<ul> <li>\"GO TO [DESIRED ACTIVITY NAME]\": Navigates to the desired activity.</li> <li>\"CHANGE THEME [THEME CHOICE]: Changes the theme to the theme choice.</li> <li>\"CHANGE SCREEN SETTING [SCREEN SETTING CHOICE]\": Changes the screen settings to the screen settings choice</li> <li>\"TELL ME MY OPTIONS\": Reads out all possible voice commands for this activity.</li> </ul>"},{"location":"architecture/features/app_icon.html","title":"App icon","text":"Our current app icon. <p>We designed the app icon to play on the traffic safety sign for visually impaired and blind people and the focal scenario of the study project, i.e., grocery shopping.</p>"},{"location":"architecture/features/auditory_feedback.html","title":"Auditory feedback","text":"<p>Since the app is intended for visually impaired and blind people, visual feedback for actions is not a reliable solution. Therefore, auditory feedback is required to inform the user of any change, options or the current state of a feature. In particular, this feedback is essential for the user to be informed of actions that may have mistakenly or wrongfully been performed, for example, through accidentally touching the tactile interface and thus initiating an action or because a given voice command may have been misunderstood.</p> <ul> <li> <p>CHANGE OF ACTIVITY: Whenever a new activity is opened, its name is stated out loud by the app</p> </li> <li> <p>VOICE CONTROL BUTTON: As per system default, activating and deactivating the microphone also plays a sound, which indicates that the microphone is now \u2018listening\u2019 or has stopped \u2018listening.</p> </li> <li> <p>FEEDBACK ON ACTIONS: After an action is performed, whether through tactile or speech input, the app narrates the action. For example, when the theme setting has been changed.</p> </li> <li> <p>INFORMATION: If the user requests, the app will describe the current state of any feature in place of visual cues (such as coloring). Examples include listing all items on the grocery list that still need to be added to the shopping cart.</p> </li> </ul>"},{"location":"architecture/features/visual_design.html","title":"Visual design","text":"<p>Although the app is intended for visually impaired people, especially those with legal blindness, it has a visual layout. This has two main reasons. First, we acknowledge that communicating with the app loudly in public may not always be possible or desired. Thus, a clear, high-contrast visual design may aid in those situations for minor tasks, such as checking which activity the app is currently running in or checking if the grocery list is full or empty. Second, when accompanied by a sighted person, the app\u2019s functionality should also be available to them.</p> <ul> <li> <p>VOICE CONTROL BUTTON: The top third of the display is allocated for a bright red button, which activates the microphone and voice control mode. This size was chosen so that it could easily be tapped simply by feeling the top of the screen, and its placement was selected so as not to interfere with potential touch-activated navigation buttons at the bottom of the phone (screen). If activated, the microphone logo in its center turns green. Otherwise, it is white, indicating that no voice commands can be given at the current time. If the microphone is enabled, tapping the button again will deactivate it.</p> </li> <li> <p>DIMENSIONS: The layout is designed relative to the phone's dimensions. The button and card sizes dynamically adapt to the phone dimensions and contents, allowing for the largest possible size and, thus, the easiest possible legibility while keeping the desired relative layout.</p> </li> <li> <p>LIGHT THEME: The app provides a high-contrast light theme, in which the app background is a true white, button and card background are true black and button and card text is again a true white.</p> </li> <li> <p>DARK THEME: The app also provides a high-contrast dark theme, in which the app background is a true black, the button and card background are true white, and the button and card text is again a true black.</p> </li> </ul>"},{"location":"installation/android_studio_setup.html","title":"Android studio setup","text":""},{"location":"installation/android_studio_setup.html#google-maps-api-key","title":"Google Maps API Key","text":"<p>After cloning the repository, make sure to add a <code>local.properties</code> file to your project which contains the <code>MAPS_API_KEY</code> environment variable. You can get a key from the Google Maps Platform.</p> <p>Info</p> <p>If you don't plan to use any navigation or location search feature, just set it to an empty or arbitrary string.</p>"},{"location":"installation/install_from_actions.html","title":"Install Debug Build from GitHub Actions","text":"<p>You can always install latest version of the main branch directly from GitHub Actions.</p> <p>Warning</p> <p>The latest build on the main branch is considered bleeding edge and will most certainly contain bugs! Only use it when you are testing and are fine with the app breaking.</p> <p>For more stabilized versions, use the one of the official releases.</p>"},{"location":"installation/install_from_actions.html#prerequisites","title":"Prerequisites","text":"<ul> <li>An Android device in developer mode</li> <li>You are logged into your GitHub account on your device</li> </ul> <p>Open up the repo on your device by following the link </p> <p>https://github.com/StudyProject-NLI/NLInterface</p> <p>and navigate to the Actions tab by pressing the three dots button on the right.</p> <p></p> <p>Select a successfull workflow run of Testing APK</p> <p></p> <p>Download the app-debug-build artifact.</p> <p></p>"},{"location":"installation/install_from_release.html","title":"Install from GitHub Release","text":"<p>t.b.d. when v0.0.1 is released.</p>"}]}